version: "3.1"
services:

  frontend:
    image: osamamagdy/wc22_frontend:latest
    container_name: frontend
    networks:
      - wc22
    restart: on-failure
    ports:
      - 8080:80
    depends_on:
      - backend
    volumes:
      - ./private.key:/etc/nginx/certs/nginx.key
      - ./certificate.crt:/etc/nginx/certs/nginx-certificate.crt


  backend:
    image: osamamagdy/wc22_backend:latest
    container_name: backend
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWARD: ${DB_PASSWARD}
      PSQL_DB: ${PSQL_DB}
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${PORT}
    ports:
      - 3000:3000
    networks:
      - wc22
    depends_on:
      - db
    restart: on-failure
    volumes:
      - backend-storage:/var/www/storage/

  db:
    image: postgres
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${PSQL_DB}
      POSTGRES_ROOT_PASSWORD: ${DB_PASSWARD}
      POSTGRES_PASSWORD: ${DB_PASSWARD}
      POSTGRES_USER: ${DB_USER}
      SERVICE_TAGS: dev
      SERVICE_NAME: pgsql
    volumes:
      - ./pgsql:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    networks:
      - wc22




networks:
  wc22:
    driver: bridge
volumes:
  postgres-data:
  backend-storage: