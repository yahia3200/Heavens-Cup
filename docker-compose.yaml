version: "3.1"
services:
  # web_server:
  #   image: nginx
  #   container_name: web_server
  #   ports:
  #     - 80:80
  #     - 443:443
  #   networks:
  #     - cmplr
  #   restart: on-failure
  #   depends_on:
  #     - frontend
  #     - backend
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf #. is not supposed to be ~ as the file is stored in the repo
  #     - ~/nginx/nginx.key:/etc/nginx/certs/nginx.key
  #     - ~/nginx/nginx-certificate.crt:/etc/nginx/certs/nginx-certificate.crt


  # frontend:
  #   image: osamamagdy/cmplr_frontend:latest
  #   container_name: frontend
  #   networks:
  #     - cmplr
  #   restart: on-failure
  #   depends_on:
  #     - backend


  backend:
    image: osamamagdy/wc22_backend:latest
    container_name: backend
    ports:
      - 3000:3000
    networks:
      - wc22
    depends_on:
      - db
    restart: on-failure
    volumes:
      - backend-storage:/var/www/storage/

  db:
    image: postgres
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${PSQL_DB}
      POSTGRES_ROOT_PASSWORD: ${DB_PASSWARD}
      POSTGRES_PASSWORD: ${DB_PASSWARD}
      POSTGRES_USER: ${DB_USER}
      SERVICE_TAGS: dev
      SERVICE_NAME: pgsql
    volumes:
      - ./pgsql:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    networks:
      - wc22




networks:
  wc22:
    driver: bridge
volumes:
  postgres-data:
  backend-storage: